include "taxonomy.diaspec";

context Sleep as Period[] {
	when provided inactivityLevel from InactivitySensor 
		get currentTime from RoutineScheduler,
		lastInteraction from InactivitySensor
	maybe publish;
}

/*context SleepEnd as String {
	when provided inactivityLevel from InactivitySensor
		get currentTime from RoutineScheduler,
		lastInteraction from InactivitySensor
	maybe publish;
}*/


/*controller SaveSleepTime {
	when provided SleepBegin
		do PutStringData on Storage;
	when provided SleepEnd
		do PutStringData on Storage;	
}*/


/*context GetSavedTime as String[] {
	when provided data from Storage
		maybe publish;
}*/

context GetFitbitInfos as SleepPeriod[] {
	when provided currentTime from RoutineScheduler
		get	lastSynchronization from Fitbit, sleepPeriods from Fitbit
		maybe publish;
	when provided tickHour from Clock
		get lastSynchronization from Fitbit, sleepPeriods from Fitbit
		maybe publish;
}

context Coupling as SleepPeriod[] indexed by period as Period {
	when provided GetFitbitInfos 
		get Sleep
		maybe publish;
	/*when provided GetSavedTime 
		maybe publish;*/
}

controller SleepAnalyser {
	when provided Coupling
	do SendNonCriticalNotification on Notifier,
	 PutStringData on Storage;
}
	
